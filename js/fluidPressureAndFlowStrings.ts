// Copyright 2021-2022, University of Colorado Boulder

/**
 * Auto-generated from modulify, DO NOT manually modify.
 */
/* eslint-disable */
import getStringModule from '../../chipper/js/getStringModule.js';
import TReadOnlyProperty from '../../axon/js/TReadOnlyProperty.js';
import fluidPressureAndFlow from './fluidPressureAndFlow.js';

type StringsType = {
  'fluid-pressure-and-flow': {
    'title': string;
    'titleProperty': TReadOnlyProperty<string>;
  };
  'waterTowerScreenTitle': string;
  'waterTowerScreenTitleProperty': TReadOnlyProperty<string>;
  'earth': string;
  'earthProperty': TReadOnlyProperty<string>;
  'fluxUnitsMetric': string;
  'fluxUnitsMetricProperty': TReadOnlyProperty<string>;
  'fluidDensity': string;
  'fluidDensityProperty': TReadOnlyProperty<string>;
  'pressure': string;
  'pressureProperty': TReadOnlyProperty<string>;
  'honey': string;
  'honeyProperty': TReadOnlyProperty<string>;
  'dots': string;
  'dotsProperty': TReadOnlyProperty<string>;
  'mPerSPerS': string;
  'mPerSPerSProperty': TReadOnlyProperty<string>;
  'densityUnitsEnglish': string;
  'densityUnitsEnglishProperty': TReadOnlyProperty<string>;
  'ruler': string;
  'rulerProperty': TReadOnlyProperty<string>;
  'mPerS': string;
  'mPerSProperty': TReadOnlyProperty<string>;
  'hose': string;
  'hoseProperty': TReadOnlyProperty<string>;
  'matchLeakage': string;
  'matchLeakageProperty': TReadOnlyProperty<string>;
  'atmospheres': string;
  'atmospheresProperty': TReadOnlyProperty<string>;
  'slowMotion': string;
  'slowMotionProperty': TReadOnlyProperty<string>;
  'ftPerSPerS': string;
  'ftPerSPerSProperty': TReadOnlyProperty<string>;
  'measuringTape': string;
  'measuringTapeProperty': TReadOnlyProperty<string>;
  'fill': string;
  'fillProperty': TReadOnlyProperty<string>;
  'psi': string;
  'psTProperty': TReadOnlyProperty<string>;
  'english': string;
  'englishProperty': TReadOnlyProperty<string>;
  'friction': string;
  'frictionProperty': TReadOnlyProperty<string>;
  'rateUnitsMetric': string;
  'rateUnitsMetricProperty': TReadOnlyProperty<string>;
  'flowRate': string;
  'flowRateProperty': TReadOnlyProperty<string>;
  'flowRateWithColon': string;
  'flowRateWithColonProperty': TReadOnlyProperty<string>;
  'kPa': string;
  'kPaProperty': TReadOnlyProperty<string>;
  'ft': string;
  'ftProperty': TReadOnlyProperty<string>;
  'gasoline': string;
  'gasolineProperty': TReadOnlyProperty<string>;
  'manual': string;
  'manualProperty': TReadOnlyProperty<string>;
  'on': string;
  'onProperty': TReadOnlyProperty<string>;
  'area': string;
  'areaProperty': TReadOnlyProperty<string>;
  'rateUnitsEnglish': string;
  'rateUnitsEnglishProperty': TReadOnlyProperty<string>;
  'water': string;
  'waterProperty': TReadOnlyProperty<string>;
  'readoutFeet': string;
  'readoutFeetProperty': TReadOnlyProperty<string>;
  'gravity': string;
  'gravityProperty': TReadOnlyProperty<string>;
  'metric': string;
  'metricProperty': TReadOnlyProperty<string>;
  'massLabelPattern': string;
  'massLabelPatternProperty': TReadOnlyProperty<string>;
  'atm': string;
  'atmProperty': TReadOnlyProperty<string>;
  'grid': string;
  'gridProperty': TReadOnlyProperty<string>;
  'normal': string;
  'normalProperty': TReadOnlyProperty<string>;
  'readoutMeters': string;
  'readoutMetersProperty': TReadOnlyProperty<string>;
  'off': string;
  'offProperty': TReadOnlyProperty<string>;
  'atmosphere': string;
  'atmosphereProperty': TReadOnlyProperty<string>;
  'areaUnitsMetric': string;
  'areaUnitsMetricProperty': TReadOnlyProperty<string>;
  'densityUnitsMetric': string;
  'densityUnitsMetricProperty': TReadOnlyProperty<string>;
  'valueWithUnitsPattern': string;
  'valueWithUnitsPatternProperty': TReadOnlyProperty<string>;
  'm': string;
  'mProperty': TReadOnlyProperty<string>;
  'fluxUnitsEnglish': string;
  'fluxUnitsEnglishProperty': TReadOnlyProperty<string>;
  'units': string;
  'unitsProperty': TReadOnlyProperty<string>;
  'flux': string;
  'fluxProperty': TReadOnlyProperty<string>;
  'fluxMeter': string;
  'fluxMeterProperty': TReadOnlyProperty<string>;
  'ftPerS': string;
  'ftPerSProperty': TReadOnlyProperty<string>;
  'areaUnitsEnglish': string;
  'areaUnitsEnglishProperty': TReadOnlyProperty<string>;
  'mars': string;
  'marsProperty': TReadOnlyProperty<string>;
  'jupiter': string;
  'jupiterProperty': TReadOnlyProperty<string>;
  'mysteryFluid': string;
  'mysteryFluidProperty': TReadOnlyProperty<string>;
  'mysteryPlanet': string;
  'mysteryPlanetProperty': TReadOnlyProperty<string>;
  'planetA': string;
  'planetAProperty': TReadOnlyProperty<string>;
  'planetB': string;
  'planetBProperty': TReadOnlyProperty<string>;
  'planetC': string;
  'planetCProperty': TReadOnlyProperty<string>;
  'fluidA': string;
  'fluidAProperty': TReadOnlyProperty<string>;
  'fluidB': string;
  'fluidBProperty': TReadOnlyProperty<string>;
  'fluidC': string;
  'fluidCProperty': TReadOnlyProperty<string>;
  'feet': string;
  'feetProperty': TReadOnlyProperty<string>;
  'meters': string;
  'metersProperty': TReadOnlyProperty<string>;
  'speed': string;
  'speedProperty': TReadOnlyProperty<string>;
  'flowScreenTitle': string;
  'flowScreenTitleProperty': TReadOnlyProperty<string>;
  'underPressureScreenTitle': string;
  'underPressureScreenTitleProperty': TReadOnlyProperty<string>;
};

const fluidPressureAndFlowStrings = getStringModule( 'FLUID_PRESSURE_AND_FLOW' ) as StringsType;

fluidPressureAndFlow.register( 'fluidPressureAndFlowStrings', fluidPressureAndFlowStrings );

export default fluidPressureAndFlowStrings;
